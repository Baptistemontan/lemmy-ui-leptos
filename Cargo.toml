[package]
name = "lemmy-ui-leptos"
version = "0.0.1"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
leptos = { version = "0.5", features = ["nightly"] }
leptos_actix = { version = "0.5", optional = true }
leptos_meta = { version = "0.5", features = ["nightly"] }
leptos_router = { version = "0.5", features = ["nightly"] }
leptos_icons = { version = "0.1", features = [
  "ChBell",
  "ChSearch",
  "ChMenuHamburger",
  "ChHeart",
  "ChEye",
  "ChEyeSlash",
  "ChArrowUp",
  "ChArrowDown",
  "ChNotes",
  "ChStar",
  "ChCopy",
  "ChMenuKebab",
  "ChFlag",
  "ChBlock",

] }
leptos_i18n = { version = "0.2", features = ["nightly"] }
leptos_query = "0.3"


serde = { version = "1", features = ["derive"] }
serde_json = "1"
web-sys = { version = "0.3", features = ["AbortController", "AbortSignal"] }
gloo-net = { version = "0.4", features = ["http"] }
log = "0.4"
cfg-if = "1.0"
tracing = "0.1"
getrandom = { version = "0.2", features = ["js"] }
lemmy_api_common = { git = "https://github.com/LemmyNet/lemmy.git", branch = "main", default-features = false }

serde_urlencoded = "0.7"
thiserror = "1.0"

# dependecies for client (enable when csr or hydrate set)
wasm-bindgen = { version = "0.2", optional = true }
console_log = { version = "1", optional = true }
console_error_panic_hook = { version = "0.1", optional = true }
wasm-cookies = "0.2"

# dependecies for server (enable when ssr set)
actix-files = { version = "0.6", optional = true }
actix-web = { version = "4", features = ["macros"], optional = true }
actix-proxy = { version = "0.2", optional = true }
awc = { version = "3.2", optional = true }
async-trait = "0.1"
actix-session = { version = "0.8", features = [
  "cookie-session",
], optional = true }


[package.metadata.leptos-i18n]
default = "en"
locales = ["en", "fr"]
namespaces = ["nav"]

[features]
default = ["csr"]
hydrate = [
  "leptos/hydrate",
  "leptos_meta/hydrate",
  "leptos_router/hydrate",
  "leptos_i18n/hydrate",
  "leptos_query/hydrate",
]
csr = ["leptos/csr", "leptos_meta/csr", "leptos_router/csr", "leptos_i18n/csr"]
ssr = [
  "leptos/ssr",
  "leptos_i18n/actix",
  "leptos_meta/ssr",
  "leptos_router/ssr",
  "leptos_query/ssr",
  "dep:leptos_actix",
  "dep:actix-web",
  "dep:actix-files",
  "dep:actix-proxy",
  "dep:awc",
  "dep:actix-session",
]

[package.metadata.cargo-all-features]
denylist = ["actix-files", "actix-web", "leptos_actix"]
skip_feature_sets = [["csr", "ssr"], ["csr", "hydrate"], ["ssr", "hydrate"]]

[profile.release]
codegen-units = 1
lto = true

[profile.wasm-release]
inherits = "release"
opt-level = "z"
lto = true
codegen-units = 1

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name   
output-name = "lemmy-ui-leptos"
# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"
# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg	
site-pkg-dir = "pkg"
tailwind-input-file = "style/tailwind.css"
# [Optional] Files in the asset-dir will be copied to the site-root directory
assets-dir = "public"
# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "0.0.0.0:1237"
# The port to use for automatic reload monitoring
reload-port = 3001
# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"
#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"
# Set by cargo-leptos watch when building with tha tool. Controls whether autoreload JS will be included in the head
watch = false
# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"
# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

lib-profile-release = "wasm-release"
